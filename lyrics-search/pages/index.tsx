import Head from 'next/head'
import {useEffect, useState} from "react";
import Box from '@mui/material/Box'
import SearchInput from "../components/searchInput"
import styles from '../styles/Home.module.css'
import styled from "styled-components"
import LyricCard from "../components/lyricCard"
import Typography from '@mui/material/Typography'
import Spotify from "../components/spotifyPlayer"
import YouTube from "../components/youTubePlayer"
import Genius from "../components/geniusPlayer"
import Modal from '@mui/material/Modal'
import SongDetail from "../components/songDetail";
import {pink} from "@mui/material/colors";

//import useScript from "../hooks/useScript";

export interface Lyric {
  id: number
  apiPath: string,
  fullTitle: string,
  artistNames: string,
  album: string,
  thumbnailUrl: string,
}

interface ApiResponse {
  result: {
    id: number,
    api_path: string,
    title: string,
    artist_names: string,
    song_art_image_thumbnail_url: string,
    full_title: string,
  }
}



const size = {
  mobile: "320px",
  tablet: "768px",
  laptop: "1024px",
  desktop: "2560px",
}

const StyledBox = styled(Box)`
{
  display: flex;
  flexWrap: wrap;
  width: 40%;
}
`
const StyledH1 = styled.h1`
{
  color: #fafafa;
  margin: 0;
  line-height: 1.15;
  font-size: 4rem;
  text-align: center;
  @media (max-width: ${size.tablet}) {
    width: 3rem;
  }
  @media (max-width: ${size.mobile}) {
    width: 2rem;
  }
}
`
const StyledLyricContainer = styled.div`
{
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-items: center;
  flex-wrap: wrap;
  justify-content: space-evenly;
}
`
export default function Home() {
  const [lyricsList, setLyricsList] = useState<Lyric[]>([])
  const [currentSong, setCurrentSong] = useState<number>()
  const [openDialog, setOpenDialog] =useState(false)

  const handleClose = ()=>setOpenDialog(false)

  const handleSearch = async (searchText: string) => {
    const url = `https://api.genius.com/search?access_token=pTXOfKJeRpIiIMmMlXtgEhk8yCJggWx6fhdSE4_6SE_GJMUnl5sZhFLOPcaVagUf&q=${searchText}`
    const response = await fetch(url)
    const jsonResponse = await response.json();
    const parsedHits = jsonResponse.response.hits.map((hit: ApiResponse) => {
      const {id, api_path, title, artist_names, song_art_image_thumbnail_url, full_title} = hit.result
      return {
        id,
        apiPath: api_path,
        title,
        artistNames: artist_names,
        album: full_title,
        thumbnailUrl: song_art_image_thumbnail_url,
      }
    })
    setLyricsList(parsedHits)
  }

  const onHandleOpenDetail = async (songId: number) => {
    setOpenDialog(true)
    setCurrentSong(songId)
  }

  return (
    <div className={styles.container} style={{background: 'url(./adult-g487804977_1920.jpg) no-repeat center center fixed' ,backgroundSize: 'cover'}}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app"/>
        <link rel="icon" href="/favicon.ico"/>
      </Head>

      <main className={styles.main} >
        <Typography variant={'h1'}  sx={{ color: pink[500] , fontSize: '8rem', fontFamily:'Dhurjati'}}> Find that Earworm now </Typography>
        <StyledBox>
          <SearchInput handleSearch={handleSearch}/>
        </StyledBox>
        <StyledLyricContainer>
          {lyricsList?.map((hit) => (<LyricCard onHandleOpenDetail={onHandleOpenDetail} lyric={hit}/>))}
        </StyledLyricContainer>
      </main>
      {/*<div id={'rg_embed_link_109096'} style={{width: '40rem', height: '20rem', background: 'aqua'}}>
        <Genius link="//genius.com/songs/109096/embed.js"/>
      </div>*/}
     <SongDetail openDialog={openDialog} handleClose={handleClose} songId={currentSong}/>
      <footer className={styles.footer}>
        <a
          href="https://www.linkedin.com/in/javascriptninja/"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by Sol Garcia

        </a>
      </footer>

    </div>
  )
}
